<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ppdai.infrastructure.mq.biz.dal.meta.QueueOffsetRepository">
	<!-- 业务逻辑sql请写在这个文件内 -->
	<resultMap id="LastUpdateMap"
		type="com.ppdai.infrastructure.mq.biz.entity.LastUpdateEntity">
		<result column="lastDate" property="lastDate" />
		<result column="maxId" property="maxId" />
		<result column="count" property="count" />
	</resultMap>
	<resultMap type="com.ppdai.infrastructure.mq.biz.entity.OffsetVersionEntity"
		id="OffsetVersionMap">
		<result column="id" property="id" />
		<result column="offset" property="offset" />
		<result column="offset_version" property="offsetVersion" />
	</resultMap>
	<select id="getOffsetVersion" resultMap="OffsetVersionMap" useCache="false">
		select
		id,offset,offset_version from queue_offset where offset>0
	</select>
	<select id="getLastUpdate" resultMap="LastUpdateMap" useCache="false">
		select max(meta_update_time) as lastDate,max(id) as maxId ,count(1) as
		`count` from queue_offset
	</select>
	<select id="getByConsumerGroupIds" resultMap="BaseResultMap"
		useCache="false">
		select *
		from queue_offset
		where consumer_group_id in
		(
		<foreach collection="consumerGroupIds" item="item" index="index"
			separator=",">#{item}</foreach>
		)
	</select>
	<select id="getAllBasic" resultMap="BaseResultMap" useCache="false">
			select id, consumer_group_id, consumer_group_name, consumer_name,
		consumer_id, topic_id, topic_name, origin_topic_name, topic_type,
		queue_id, offset, start_offset, offset_version, stop_flag, db_info,origin_consumer_group_name,sub_env
		from queue_offset
	</select>


	<select id="getByConsumerGroupTopic" resultMap="BaseResultMap"
		useCache="false">
		select *
		from queue_offset where
		consumer_group_id =
		#{consumerGroupId} and topic_id= #{topicId}
	</select>
	<select id="getUnSubscribeData" resultMap="BaseResultMap"
		useCache="false">
		select *
		from queue_offset where
		consumer_id =0 and (consumer_group_mode=1 or consumer_group_mode=3 ) and sub_env='default'
	</select>

	<select id="countBy" parameterType="java.util.Map" resultType="java.lang.Long">
		select count(1)
		from queue_offset
		<where>
			1=1
			<if test="id != null and id !=''" >
				and `id` = #{id}
			</if>
			<if test="consumerGroupId != null and consumerGroupId !=''" >
				and `consumer_group_id` = #{consumerGroupId}
			</if>
			<if test="consumerGroupName != null and consumerGroupName !=''" >
				and (`consumer_group_name` = #{consumerGroupName} or `origin_consumer_group_name`=#{consumerGroupName})
			</if>
			<if test="consumerName != null and consumerName !=''" >
				and `consumer_name` like concat(concat('%',#{consumerName}),'%')
			</if>
			<if test="consumerId != null and consumerId !=''" >
				and `consumer_id` = #{consumerId}
			</if>
			<if test="topicId != null and topicId !=''" >
				and `topic_id` = #{topicId}
			</if>
			<if test="topicName != null and topicName !=''" >
				and `topic_name` = #{topicName}
			</if>
			<if test="originTopicName != null and originTopicName !=''" >
				and `origin_topic_name` = #{originTopicName}
			</if>
			<if test="topicType != null and topicType !=''" >
				and `topic_type` = #{topicType}
			</if>
			<if test="queueId != null and queueId !=''" >
				and `queue_id` = #{queueId}
			</if>
			<if test="offset != null and offset !=''" >
				and `offset` = #{offset}
			</if>
			<if test="startOffset != null and startOffset !=''" >
				and `start_offset` = #{startOffset}
			</if>
			<if test="offsetVersion != null and offsetVersion !=''" >
				and `offset_version` = #{offsetVersion}
			</if>
			<if test="stopFlag != null and stopFlag !=''" >
				and `stop_flag` = #{stopFlag}
			</if>
			<if test="dbInfo != null and dbInfo !=''" >
				and `db_info` = #{dbInfo}
			</if>
			<if test="insertBy != null and insertBy !=''" >
				and `insert_by` = #{insertBy}
			</if>
			<if test="insertTime != null and insertTime !=''" >
				and `insert_time` = #{insertTime}
			</if>
			<if test="updateBy != null and updateBy !=''" >
				and `update_by` = #{updateBy}
			</if>
			<if test="updateTime != null and updateTime !=''" >
				and `update_time` = #{updateTime}
			</if>
			<if test="isActive != null and isActive !=''" >
				and `is_active` = #{isActive}
			</if>
			<if test="metaUpdateTime != null and metaUpdateTime !=''" >
				and `meta_update_time` = #{metaUpdateTime}
			</if>
			<if test="originConsumerGroupName != null and originConsumerGroupName !=''" >
				and `origin_consumer_group_name` = #{originConsumerGroupName}
			</if>

			<if test="updateTimeStart != null and updateTimeStart !=''" >
				and update_time >= #{updateTimeStart}
			</if>
			<if test="updateTimeEnd != null and updateTimeEnd !=''" >
				and update_time <![CDATA[ <= ]]> #{updateTimeEnd}
			</if>
			<if test="insertTimeStart != null and insertTimeStart !=''" >
				and insert_time >= #{insertTimeStart}
			</if>
			<if test="insertTimeEnd != null and insertTimeEnd !=''" >
				and insert_time <![CDATA[ <= ]]> #{insertTimeEnd}
			</if>
			<if test="consumerGroupMode != null and consumerGroupMode !=''" >
				and `consumer_group_mode` = #{consumerGroupMode}
			</if>
			<if test="subEnv != null and subEnv !=''" >
				and `sub_env` = #{subEnv}
			</if>
		</where>
	</select>

	<select id="getListBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select *
		from queue_offset
		<where>
			1=1
			<if test="id != null and id !=''" >
				and `id` = #{id}
			</if>
			<if test="consumerGroupId != null and consumerGroupId !=''" >
				and `consumer_group_id` = #{consumerGroupId}
			</if>
			<if test="consumerGroupName != null and consumerGroupName !=''" >
				and (`consumer_group_name` = #{consumerGroupName} or `origin_consumer_group_name`=#{consumerGroupName})
			</if>
			<if test="consumerName != null and consumerName !=''" >
				and `consumer_name` like concat(concat('%',#{consumerName}),'%')
			</if>
			<if test="consumerId != null and consumerId !=''" >
				and `consumer_id` = #{consumerId}
			</if>
			<if test="topicId != null and topicId !=''" >
				and `topic_id` = #{topicId}
			</if>
			<if test="topicName != null and topicName !=''" >
				and `topic_name` = #{topicName}
			</if>
			<if test="originTopicName != null and originTopicName !=''" >
				and `origin_topic_name` = #{originTopicName}
			</if>
			<if test="topicType != null and topicType !=''" >
				and `topic_type` = #{topicType}
			</if>
			<if test="queueId != null and queueId !=''" >
				and `queue_id` = #{queueId}
			</if>
			<if test="offset != null and offset !=''" >
				and `offset` = #{offset}
			</if>
			<if test="startOffset != null and startOffset !=''" >
				and `start_offset` = #{startOffset}
			</if>
			<if test="offsetVersion != null and offsetVersion !=''" >
				and `offset_version` = #{offsetVersion}
			</if>
			<if test="stopFlag != null and stopFlag !=''" >
				and `stop_flag` = #{stopFlag}
			</if>
			<if test="dbInfo != null and dbInfo !=''" >
				and `db_info` = #{dbInfo}
			</if>
			<if test="insertBy != null and insertBy !=''" >
				and `insert_by` = #{insertBy}
			</if>
			<if test="insertTime != null and insertTime !=''" >
				and `insert_time` = #{insertTime}
			</if>
			<if test="updateBy != null and updateBy !=''" >
				and `update_by` = #{updateBy}
			</if>
			<if test="updateTime != null and updateTime !=''" >
				and `update_time` = #{updateTime}
			</if>
			<if test="isActive != null and isActive !=''" >
				and `is_active` = #{isActive}
			</if>
			<if test="metaUpdateTime != null and metaUpdateTime !=''" >
				and `meta_update_time` = #{metaUpdateTime}
			</if>
			<if test="originConsumerGroupName != null and originConsumerGroupName !=''" >
				and `origin_consumer_group_name` = #{originConsumerGroupName}
			</if>

			<if test="updateTimeStart != null and updateTimeStart !=''" >
				and update_time >= #{updateTimeStart}
			</if>
			<if test="updateTimeEnd != null and updateTimeEnd !=''" >
				and update_time <![CDATA[ <= ]]> #{updateTimeEnd}
			</if>
			<if test="insertTimeStart != null and insertTimeStart !=''" >
				and insert_time >= #{insertTimeStart}
			</if>
			<if test="insertTimeEnd != null and insertTimeEnd !=''" >
				and insert_time <![CDATA[ <= ]]> #{insertTimeEnd}
			</if>
			<if test="consumerGroupMode != null and consumerGroupMode !=''" >
				and `consumer_group_mode` = #{consumerGroupMode}
			</if>
			<if test="subEnv != null and subEnv !=''" >
				and `sub_env` = #{subEnv}
			</if>
		</where>
		order by id desc
		limit #{start1}, #{offset1}
	</select>

	<update id="updateConsumerId"
		parameterType="com.ppdai.infrastructure.mq.biz.entity.QueueOffsetEntity">
		update queue_offset set
		consumer_name = #{consumerName},
		consumer_id = #{consumerId},meta_update_time = current_timestamp
		where id = #{id}
	</update>

	<update id="commitOffset"
		parameterType="com.ppdai.infrastructure.mq.biz.entity.QueueOffsetEntity">
		  <![CDATA[
			update queue_offset set
			offset = #{offset}
			where id = #{id} and offset_version=#{offsetVersion} and offset<#{offset}
		  ]]>
	</update>

	<update id="commitOffsetAndUpdateVersion"
			parameterType="com.ppdai.infrastructure.mq.biz.entity.QueueOffsetEntity">
		<![CDATA[
			update queue_offset set
			offset = #{offset},offset_version = offset_version+1
			where id = #{id} and offset_version=#{offsetVersion} and offset<#{offset}
		  ]]>
	</update>
	<update id="commitOffsetById"
		parameterType="com.ppdai.infrastructure.mq.biz.entity.QueueOffsetEntity">
		  <![CDATA[
			update queue_offset set
			offset = #{offset},
			start_offset=#{offset}
			where id = #{id}
		  ]]>
	</update>
	<update id="deRegister">
		  <![CDATA[
			update queue_offset set
			consumer_id = 0 ,consumer_name=''
			where consumer_id = #{consumerId}
		  ]]>
	</update>

	<update id="setConsumserIdsToNull" parameterType="java.util.List">
		update queue_offset set consumer_id = 0 ,consumer_name='' where
		consumer_id in
		(
		<foreach collection="consumerIds" item="id" index="index"
			separator=",">
			#{id}
		</foreach>
		)
	</update>

	<update id="updateStopFlag">
		update queue_offset set
		stop_flag = #{stopFlag},
		update_by = #{updateBy},
		meta_update_time = current_timestamp
		where id =
		#{id}
	</update>

	<update id="updateQueueOffset" parameterType="java.util.Map">
		update queue_offset
		set
		offset = #{offset},
		offset_version = offset_version+1,
		update_by =
		#{updateBy},
		meta_update_time = current_timestamp
		where id = #{id}
	</update>

	<delete id="deleteByConsumerGroupId" parameterType="java.lang.Long">
		delete from
		queue_offset
		where consumer_group_id = #{consumerGroupId}
	</delete>

	<delete id="deleteByConsumerGroupIdAndOriginTopicName">
		delete from queue_offset
		where consumer_group_id =
		#{consumerGroupId} and origin_topic_name= #{originTopicName}
	</delete>

<select id="getOffsetSumByIds" resultType="java.lang.Long"
        useCache="false">
        select sum(offset)
        from queue_offset where id in 
        (
            <foreach collection="ids" item="item" index="index"
            separator=",">#{item}</foreach>
        )
    </select>
</mapper>
